@model IEnumerable<BrightLifeIMS.Web.Models.Entities.Item>
@{
    ViewData["Title"] = "Items";
    var inventory = ViewBag.Inventory as BrightLifeIMS.Web.Models.Entities.Inventory;
}

<div class="container mt-4">
    <!-- Header -->
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2>
                        <i class="fas fa-boxes text-primary"></i>
                        Items in "@inventory?.Title"
                    </h2>
                    <p class="text-muted">
                        @if (inventory != null)
                        {
                            <span>Total: @Model.Count() items</span>
                            @if (!string.IsNullOrEmpty(inventory.CustomIdFormat))
                            {
                                <span class="ms-3">ID Format: <code>@inventory.CustomIdFormat</code></span>
                            }
                        }
                    </p>
                </div>
                <div>
                    <a asp-controller="Item" asp-action="Create" asp-route-inventoryId="@inventory?.Id" class="btn btn-success">
                        <i class="fas fa-plus"></i> Add New Item
                    </a>
                    <a asp-action="Details" asp-route-id="@inventory?.Id" class="btn btn-outline-info">
                        <i class="fas fa-eye"></i> Inventory Details
                    </a>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Inventories
                    </a>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Any())
    {
        <!-- Items List -->
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">
                                <i class="fas fa-cube text-success"></i>
                                @if (!string.IsNullOrEmpty(item.CustomId))
                                {
                                    <span class="badge bg-primary">@item.CustomId</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">#@item.Id</span>
                                }
                            </h6>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-h"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="viewItem(@item.Id)">
                                        <i class="fas fa-eye"></i> View Details
                                    </a></li>
                                    <li><a class="dropdown-item" asp-controller="Item" asp-action="Edit" asp-route-id="@item.Id">
                                        <i class="fas fa-edit"></i> Edit
                                    </a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" href="#" onclick="deleteItem(@item.Id)">
                                        <i class="fas fa-trash"></i> Delete
                                    </a></li>
                                </ul>
                            </div>
                        </div>
                        <div class="card-body">
                            <!-- Custom Field Values -->
                            @if (inventory != null)
                            {
                                <!-- String Fields -->
                                @for (int i = 1; i <= 3; i++)
                                {
                                    var stateProperty = inventory.GetType().GetProperty($"CustomString{i}State");
                                    var nameProperty = inventory.GetType().GetProperty($"CustomString{i}Name");
                                    var isActive = (bool)(stateProperty?.GetValue(inventory) ?? false);
                                    var fieldName = nameProperty?.GetValue(inventory)?.ToString();
                                    
                                    if (isActive && !string.IsNullOrEmpty(fieldName))
                                    {
                                        var valueProperty = item.GetType().GetProperty($"CustomString{i}");
                                        var value = valueProperty?.GetValue(item)?.ToString();
                                        
                                        if (!string.IsNullOrEmpty(value))
                                        {
                                            <div class="mb-2">
                                                <small class="text-muted">@fieldName:</small>
                                                <div class="fw-bold">@value</div>
                                            </div>
                                        }
                                    }
                                }

                                <!-- Integer Fields -->
                                @for (int i = 1; i <= 3; i++)
                                {
                                    var stateProperty = inventory.GetType().GetProperty($"CustomInt{i}State");
                                    var nameProperty = inventory.GetType().GetProperty($"CustomInt{i}Name");
                                    var isActive = (bool)(stateProperty?.GetValue(inventory) ?? false);
                                    var fieldName = nameProperty?.GetValue(inventory)?.ToString();
                                    
                                    if (isActive && !string.IsNullOrEmpty(fieldName))
                                    {
                                        var valueProperty = item.GetType().GetProperty($"CustomInt{i}");
                                        var value = valueProperty?.GetValue(item);
                                        
                                        if (value != null)
                                        {
                                            <div class="mb-2">
                                                <small class="text-muted">@fieldName:</small>
                                                <div class="fw-bold">@value</div>
                                            </div>
                                        }
                                    }
                                }

                                <!-- Boolean Fields -->
                                @for (int i = 1; i <= 3; i++)
                                {
                                    var stateProperty = inventory.GetType().GetProperty($"CustomBool{i}State");
                                    var nameProperty = inventory.GetType().GetProperty($"CustomBool{i}Name");
                                    var isActive = (bool)(stateProperty?.GetValue(inventory) ?? false);
                                    var fieldName = nameProperty?.GetValue(inventory)?.ToString();
                                    
                                    if (isActive && !string.IsNullOrEmpty(fieldName))
                                    {
                                        var valueProperty = item.GetType().GetProperty($"CustomBool{i}");
                                        var value = valueProperty?.GetValue(item);
                                        
                                        if (value != null)
                                        {
                                            <div class="mb-2">
                                                <small class="text-muted">@fieldName:</small>
                                                <div>
                                                    @if ((bool)value)
                                                    {
                                                        <span class="badge bg-success"><i class="fas fa-check"></i> Yes</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary"><i class="fas fa-times"></i> No</span>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    }
                                }
                            }

                            @if (item.LikesCount > 0)
                            {
                                <div class="mt-2">
                                    <small class="text-muted">
                                        <i class="fas fa-heart text-danger"></i> @item.LikesCount likes
                                    </small>
                                </div>
                            }
                        </div>
                        <div class="card-footer text-muted">
                            <small>
                                Created: @item.CreatedAt.ToString("MMM dd, yyyy")
                                @if (item.UpdatedAt != item.CreatedAt)
                                {
                                    <br />
                                    <span>Updated: @item.UpdatedAt.ToString("MMM dd, yyyy")</span>
                                }
                            </small>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination (Future Enhancement) -->
        <div class="row mt-4">
            <div class="col-12">
                <nav aria-label="Items pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item disabled">
                            <span class="page-link">Previous</span>
                        </li>
                        <li class="page-item active">
                            <span class="page-link">1</span>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">Next</span>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="row">
            <div class="col-12">
                <div class="text-center py-5">
                    <i class="fas fa-box-open fa-5x text-muted mb-4"></i>
                    <h3>No Items Yet</h3>
                    <p class="text-muted">This inventory doesn't have any items yet. Start by adding your first item!</p>
                    <a asp-controller="Item" asp-action="Create" asp-route-inventoryId="@inventory?.Id" class="btn btn-success btn-lg">
                        <i class="fas fa-plus"></i> Add First Item
                    </a>
                </div>
            </div>
        </div>
    }
</div>

<!-- Item Details Modal -->
<div class="modal fade" id="itemDetailsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Item Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="itemDetailsContent">
                <!-- Content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function viewItem(itemId) {
            // This will be implemented when Item controller is ready
            alert('Item details view will be implemented soon. Item ID: ' + itemId);
        }

        function deleteItem(itemId) {
            if (confirm('Are you sure you want to delete this item? This action cannot be undone.')) {
                // This will be implemented when Item controller is ready
                alert('Delete functionality will be implemented soon. Item ID: ' + itemId);
            }
        }

        // Add some interactivity to the cards
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-2px)';
                    this.style.transition = 'transform 0.2s';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });
        });
    </script>
}
